{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DrumPad","drumpad","audioName","audio","handleClick","map","pad","index","className","onClick","e","id","src","preload","DrumMachine","useState","clicked","setClicked","key","audioKey","target","children","audioNameIndex","indexOf","audioEl","document","getElementById","currentTime","play","clickedPad","handleKeyDown","toLowerCase","useEffect","window","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App"],"mappings":"gNAEMA,EAAU,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YAE3C,OACE,mCAEEH,EAAQI,KAAI,SAACC,EAAKC,GAChB,OACF,yBAAQC,UAAU,8BAA8BC,QAAS,SAACC,GAAD,OAAON,EAAYM,IAC5EC,GAAIT,EAAUK,GADd,UACmCD,EAAI,uBAAOE,UAAU,OAAOG,GAAIL,EAAKM,IAAKT,EAAMI,GAAQM,QAAQ,WAAxEN,SAiElBO,EAzDK,WAClB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMhB,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnDC,EAAY,CAAC,OAAQ,QAAS,UAAW,UAAW,QAAS,QAAS,QAAS,QAAS,SAYxFE,EAAc,SAACM,EAAGQ,GACtB,GAAGR,EAAG,CACN,IAAMS,EAAWT,EAAEU,OAAOC,SAAS,GAAGV,GAChCW,EAAiBrB,EAAQsB,QAAQJ,GACjCK,EAAUC,SAASC,eAAeP,GAGxC,OAFAK,EAAQG,YAAc,EACtBV,EAAWf,EAAUoB,IACdE,EAAQI,OAEb,IAAMC,EAAaJ,SAASC,eAAeR,GACrCI,EAAiBrB,EAAQsB,QAAQL,GAGvC,OAFAD,EAAWf,EAAUoB,IACrBO,EAAWF,YAAc,EAClBE,EAAWD,QAIhBE,EAAgB,SAACpB,GAAO,IAAD,gBACZT,GADY,IAC3B,IAAI,EAAJ,qBAAwB,CAAC,IAAjBiB,EAAgB,QACnBR,EAAEQ,MAAF,UAAaA,EAAIa,gBAClB3B,EAAY,KAAMc,IAHK,gCAe7B,OAPAc,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWJ,GAE3B,WACR,OAAOG,OAAOE,oBAAoB,UAAWL,OAI7C,qBAAKtB,UAAU,gEAAgEG,GAAG,eAAlF,SACA,sBAAKH,UAAU,YAAf,UACA,cAAC,EAAD,CAASP,QAASA,EAASE,MA9Cf,CACZ,2DACA,2DACA,2DACA,6DACA,6DACA,yDACA,0DACA,0DACA,2DAqCyCC,YAAaA,EAAaF,UAAWA,IAC9E,qBAAKM,UAAU,gCAAgCG,GAAG,qBAAlD,SAAuE,sBAAMH,UAAU,oEAAoEG,GAAG,UAAvF,SAAkGK,YCzD9JoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFvB,SAASC,eAAe,SAO1BU,M","file":"static/js/main.85e9ecdb.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nconst DrumPad = ({drumpad, audioName, audio, handleClick}) => {\n  \n  return (\n    <>\n      {\n      drumpad.map((pad, index) => {\n        return (\n      <button className=\"drum-pad button btn-primary\" onClick={(e) => handleClick(e)}\n      id={audioName[index]} key={index}>{pad}<audio className=\"clip\" id={pad} src={audio[index]} preload=\"auto\"></audio></button>\n      );\n      })\n      }\n  </>\n    )\n}\n\nconst DrumMachine = () => {\n  const [clicked, setClicked] = useState('')\n  const drumpad = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\n  const audioName = ['clap', 'crash', 'hi-hat1', 'hi-hat2', 'kick1', 'kick2', 'perc1', 'perc2', 'snare'];\n  const audio = [\n    'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3', \n    'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3', \n    'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n    'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3', \n    'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3', \n    'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\n    'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\n    'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3', \n    'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'];\n  \n  const handleClick = (e, key) => {\n    if(e) {\n    const audioKey = e.target.children[0].id;\n    const audioNameIndex = drumpad.indexOf(audioKey);\n    const audioEl = document.getElementById(audioKey);\n    audioEl.currentTime = 0;\n    setClicked(audioName[audioNameIndex]);\n    return audioEl.play();\n    } else {\n      const clickedPad = document.getElementById(key);\n      const audioNameIndex = drumpad.indexOf(key);\n      setClicked(audioName[audioNameIndex]);\n      clickedPad.currentTime = 0;\n      return clickedPad.play();\n    }\n  };\n  \n  const handleKeyDown = (e) => {\n    for(let key of drumpad) {\n      if(e.key === `${key.toLowerCase()}`) {\n        handleClick(null, key);\n      }\n    }\n  }\n  \n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    \n    return (() => { \n    return window.removeEventListener('keydown', handleKeyDown)})\n  });\n  \n  return (\n    <div className=\"card mx-auto d-flex justify-content-center align-items-center\" id=\"drum-machine\">\n    <div className=\"card-body\">\n    <DrumPad drumpad={drumpad} audio={audio} handleClick={handleClick} audioName={audioName}/>\n    <div className=\"d-flex justify-content-center\" id=\"display-container \"><span className=\"badge badge-info d-flex justify-content-center align-items-center\" id=\"display\">{clicked}</span></div>\n    </div>\n    </div >\n    )\n};\n\nexport default DrumMachine;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}